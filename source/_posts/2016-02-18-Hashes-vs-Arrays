---
layout: post
title:  "Hashes vs Arrays"
date: 2016-2-18 9:15:24
categories: jekyll update
description: The second blog post about hashes and arrays and when to use one versus the other.
keywords: "Hashes vs Arrays"
categories:
- welcome
tags: second post
- welcome
- hello-world
---


Hashes and arrays are similar features that operate within Ruby. Firstly, an array is merely a list that can be retrieved by simply referencing the number in which it is listed, starting from 0. A hash is a more complex system of referencing data, usually made up of pairs of information under a detailed key. For example, if merely referencing the colors of the rainbow, the colors could be listed in an array. However, if one desired to know the specific shade of each color in the rainbow, like cherry red, tiger orange, lemon yellow, etc., a hash would be made, since a hash is a more intricate chart that goes more in depth. Just like an array, the hash would have to be identified, say as “colors of the rainbow.” The general color (red, orange, yellow) would be the key, and the specific shade would be the value associated with that key. 
	Both arrays and hashes can add, access, and remove data, yet hashes, in Ruby  are typically faster and easier to use. Arrays require one to count to whatever position that object is in the list, whereas a hash requires the key word, which is often easier to remember. Because hashes are saved with more data, they are located easier. If your friend were lost somewhere in the house, an array would require you look in every room before locating the friend, however a hash would be able to determine exactly which room the friend is on due to the amount of information given in the hash-table upfront. The hash would do this by having the key pre-assigned to be connected to the room the friend is in. Arrays would be used for smaller lists that do not need to go into too much detail, while hashes are best used for long lists with multiple associations. 
		There are many different ways to write or program in hashes. One can use colons, quotes, or some other variations when making the key. Ultimately style and comfort are what it comes down to. Hashes may be able to do more, but take longer to program. If the task is simple, arrays are probably the best option, while hashes should be saved for tasks where lots of data is to be organized. The only difference between the two is that indexing for arrays is done based on an integer index, while hashes relies on keys and values to select objects. Both tools can do similar functions though, so becoming comfortable with the controls is the most important factor that will lead to a person deciding to use hashes or arrays in certain circumstances. For programmers that know many other languages like Jave and many others, may prefer hashes because hashes are prevalent throughout many languages. 


"Hashtables vs. Arrays." Kirupa.com. N.p., n.d. Web. 04 Feb. 2016.

"Perplexed - Difference between Arrays and Hashes?" Codecademy. N.p., n.d. Web. 04 Feb. 2016.

"Ruby Hashes." Www.tutorialspoint.com. N.p., n.d. Web. 17 Feb. 2016.


